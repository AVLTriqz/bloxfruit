--[[ 
Fruit Finder | Doctorate Premium Version
- Not for Blox Fruit Dealer (only genuine fruit models)
- Code structure: modular, scalable, readable, robust animation logic
- GUI: Small, responsive, with glass effect, gradients, shadows, smooth transitions
- ESP: Floating, animated, glowing, with dynamic color cycling
- Notification: slide-fade with shadow and color pulse
--]]

-- SERVICES
local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")
local HttpService = game:GetService("HttpService")
local TeleportService = game:GetService("TeleportService")
local Lighting = game:GetService("Lighting")
local LocalPlayer = Players.LocalPlayer
local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
local HumanoidRootPart = Character:WaitForChild("HumanoidRootPart")

-- UI SCALED LAYOUTS (smaller, fixed aspect)
local MAIN_W, MAIN_H = 0.23, 0.27
local GUI_COLOR = Color3.fromRGB(33, 28, 52)
local HEADER_COLOR = Color3.fromRGB(110, 30, 185)
local STATUS_COLOR = Color3.fromRGB(40, 43, 73)
local FRUIT_COLOR = Color3.fromRGB(50, 61, 83)

-- BLUR FOR PREMIUM EFFECT
local blur = Instance.new("BlurEffect", Lighting)
blur.Size = 20

-- HELPER: Create Layered Frame (gradient, shadow, glass)
local function CreateFrame(parent, w, h, px, py, color)
    local frame = Instance.new("Frame", parent)
    frame.Size = UDim2.new(w, 0, h, 0)
    frame.Position = UDim2.new(px, 0, py, 0)
    frame.BackgroundColor3 = color
    frame.BackgroundTransparency = 0.23
    local grad = Instance.new("UIGradient", frame)
    grad.Color = ColorSequence.new{
        ColorSequenceKeypoint.new(0.05, Color3.fromRGB(140,44,220)),
        ColorSequenceKeypoint.new(0.95, color)
    }
    grad.Rotation = 67
    local corner = Instance.new("UICorner", frame)
    corner.CornerRadius = UDim.new(0, 18)
    local shadow = Instance.new("ImageLabel", frame)
    shadow.Size = UDim2.new(1.1,0,1.12,12)
    shadow.Position = UDim2.new(0.5,-frame.AbsoluteSize.X*0.05,0.5,8)
    shadow.BackgroundTransparency = 1
    shadow.AnchorPoint = Vector2.new(0.5,0.5)
    shadow.Image = "rbxassetid://6015897843"
    shadow.ImageTransparency = 0.85
    shadow.ZIndex = 0
    return frame
end

-- MAIN GUI
local ScreenGui = Instance.new("ScreenGui", LocalPlayer:WaitForChild("PlayerGui"))
ScreenGui.IgnoreGuiInset = true
local MainFrame = CreateFrame(ScreenGui, MAIN_W, MAIN_H, 0.68, 0.68, GUI_COLOR)
MainFrame.Draggable = true
MainFrame.Active = true

-- HEADER (very small but highly detailed, animated color gradients)
local Header = CreateFrame(MainFrame, 1, 0.19, 0, 0, HEADER_COLOR)
local HeaderLabel = Instance.new("TextLabel", Header)
HeaderLabel.Size = UDim2.new(1,0,1,0)
HeaderLabel.BackgroundTransparency = 1
HeaderLabel.Font = Enum.Font.GothamBlack
HeaderLabel.TextColor3 = Color3.fromRGB(255,245,100)
HeaderLabel.TextScaled = true
HeaderLabel.Text = ""
HeaderLabel.TextStrokeTransparency = 0.85
HeaderLabel.ZIndex = 10
local bannerText = "üçâ Fruit Finder: Supreme Edition üçâ"
spawn(function()
    while true do
        for i = 1, #bannerText do
            HeaderLabel.Text = string.sub(bannerText, 1, i)
            HeaderLabel.TextColor3 = Color3.fromHSV(math.sin(tick()+i*0.04)*0.3+0.64,1,1)
            RunService.RenderStepped:Wait()
        end
        wait(0.5)
        for i = #bannerText, 1, -3 do
            HeaderLabel.Text = string.sub(bannerText, 1, i)
            RunService.RenderStepped:Wait()
        end
    end
end)

-- STATUS BOX 
local StatusFrame = CreateFrame(MainFrame, 0.95, 0.28, 0.025, 0.22, STATUS_COLOR)
local StatusLabel = Instance.new("TextLabel", StatusFrame)
StatusLabel.Size = UDim2.new(1,0,1,0)
StatusLabel.BackgroundTransparency = 1
StatusLabel.Font = Enum.Font.GothamBold
StatusLabel.TextColor3 = Color3.fromRGB(210,255,210)
StatusLabel.TextStrokeTransparency = 0.8
StatusLabel.Text = "Status: Searching..."
StatusLabel.TextScaled = true

-- FRUIT COUNT
local FruitFrame = CreateFrame(MainFrame, 0.95, 0.15, 0.025, 0.65, FRUIT_COLOR)
local FruitCountLabel = Instance.new("TextLabel", FruitFrame)
FruitCountLabel.Size = UDim2.new(1,0,1,0)
FruitCountLabel.BackgroundTransparency = 1
FruitCountLabel.Font = Enum.Font.GothamBold
FruitCountLabel.TextColor3 = Color3.fromRGB(0,255,128)
FruitCountLabel.TextScaled = true
FruitCountLabel.TextStrokeTransparency = 0.7
FruitCountLabel.Text = "Fruits Collected: 0"
spawn(function()
    while true do
        local pulse = 0.7 + math.abs(math.sin(tick()*2))*0.3
        FruitFrame.BackgroundTransparency = 0.25 + 0.09*pulse
        FruitCountLabel.TextColor3 = Color3.fromHSV(0.35 + math.sin(tick()) * 0.15, 1, 1)
        RunService.RenderStepped:Wait()
    end
end)

-- ANIMATED NOTIFICATION
local function Notify(title, text, duration)
    duration = duration or 4
    local notif = CreateFrame(ScreenGui, 0.22, 0.09, 0.68, 0.44, Color3.fromRGB(33,33,56))
    notif.AnchorPoint = Vector2.new(.5,1)
    notif.ZIndex = 30
    local titleLabel = Instance.new("TextLabel", notif)
    titleLabel.Size = UDim2.new(1,0,0.5,0)
    titleLabel.BackgroundTransparency = 1
    titleLabel.Font = Enum.Font.GothamBlack
    titleLabel.TextColor3 = Color3.fromRGB(255,235,85)
    titleLabel.TextStrokeTransparency = 0.7
    titleLabel.Text = title
    titleLabel.TextScaled = true
    local textLabel = Instance.new("TextLabel",notif)
    textLabel.Size = UDim2.new(1,0,0.5,0)
    textLabel.Position = UDim2.new(0,0,0.5,0)
    textLabel.BackgroundTransparency = 1
    textLabel.Font = Enum.Font.Gotham
    textLabel.TextColor3 = Color3.fromRGB(255,255,230)
    textLabel.Text = text
    textLabel.TextScaled = true
    local stroke = Instance.new("UIStroke", notif)
    stroke.Color = Color3.fromHSV(tick()%1,1,1)
    stroke.Thickness = 2.5
    stroke.Transparency = 0.22
    spawn(function()
        TweenService:Create(notif,TweenInfo.new(0.37),{Position=UDim2.new(0.68,0,0.37,0)}):Play()
        wait(duration)
        TweenService:Create(notif,TweenInfo.new(0.31),{Position=UDim2.new(0.68,0,0.57,0)}):Play()
        wait(0.32)
        notif:Destroy()
    end)
end

-- ESP FOR FRUITS (animated, glowing)
local function AddESP(fruit)
    if not fruit.PrimaryPart then return end
    local bgui = Instance.new("BillboardGui",fruit)
    bgui.AlwaysOnTop = true
    bgui.Size = UDim2.new(0,130,0,38)
    bgui.StudsOffset = Vector3.new(0,4,0)
    local label = Instance.new("TextLabel",bgui)
    label.Size = UDim2.new(1,0,1,0)
    label.BackgroundTransparency = 1
    label.Text = "üçí "..fruit.Name.." üçí"
    label.TextColor3 = Color3.fromHSV(tick()%1,0.80,1)
    label.Font = Enum.Font.GothamBold
    label.TextScaled = true
    local glow = Instance.new("UIStroke", label)
    glow.Thickness = 2.2
    glow.Color = Color3.fromRGB(255,0,128)
    spawn(function()
        while fruit and fruit.PrimaryPart do
            local s = 1 + math.sin(tick()*3)*0.18
            label.TextColor3 = Color3.fromHSV((tick()*0.23)%1,0.93,1)
            label.Position = UDim2.new(0,0,0.05 + 0.02*math.cos(tick()*1.7),0)
            label.TextSize = 15 + 4*math.abs(math.sin(tick()*2.5))
            glow.Color = Color3.fromHSV((tick()*0.13)%1,1,1)
            RunService.RenderStepped:Wait()
        end
        bgui:Destroy()
    end)
end

-- SERVER HOP LOGIC
local function ListServers(cursor)
    local url = "https://games.roblox.com/v1/games/" .. game.PlaceId .. "/servers/Public?sortOrder=Asc&limit=100"
    if cursor then url = url .. "&cursor=" .. cursor end
    local response = game:HttpGet(url)
    return HttpService:JSONDecode(response)
end
local function HopServer()
    for i=4,1,-1 do
        StatusLabel.Text = "Status: Server hop in "..i.."s"
        StatusFrame.BackgroundTransparency = 0.18 + 0.09*math.abs(math.sin(tick()*3+i))
        wait(1)
    end
    Notify("Fruit Finder","Server Hopping Now!",2)
    local NextCursor, targetServer = nil, nil
    repeat
        local serversData = ListServers(NextCursor)
        NextCursor = serversData.nextPageCursor
        for _, srv in pairs(serversData.data) do
            if srv.playing < srv.maxPlayers and srv.id ~= game.JobId then
                targetServer = srv; break
            end
        end
    until targetServer
    TeleportService:TeleportToPlaceInstance(game.PlaceId, targetServer.id, LocalPlayer)
end

-- MAIN LOOP
local fruitsCollected = 0
while true do
    local fruits = {}
    for _, model in pairs(Workspace:GetDescendants()) do
        if model:IsA("Model") and model.Name:find("Fruit") and not model.Name:find("Dealer") then
            table.insert(fruits, model)
            AddESP(model)
        end
    end
    if #fruits == 0 then
        StatusLabel.Text = "Status: No fruits, hopping..."
        HopServer()
    else
        for _, fruit in pairs(fruits) do
            if fruit.PrimaryPart then
                StatusLabel.Text = "Status: Fruit Found! Approaching..."
                local twn = TweenService:Create(
                    HumanoidRootPart,
                    TweenInfo.new(0.51, Enum.EasingStyle.Back, Enum.EasingDirection.Out),
                    {CFrame = CFrame.new(fruit.PrimaryPart.Position + Vector3.new(0,3,0))}
                )
                twn:Play(); twn.Completed:Wait()
                local tool = LocalPlayer.Character:FindFirstChildOfClass("Tool") or LocalPlayer.Backpack:FindFirstChildOfClass("Tool")
                if tool and tool.Name:find("Fruit") then
                    local success, _ = pcall(function()
                        ReplicatedStorage.Remotes.CommF_:InvokeServer("StoreFruit", tool:GetAttribute("OriginalName"), tool)
                    end)
                    if success then
                        fruitsCollected = fruitsCollected + 1
                        FruitCountLabel.Text = "Fruits Collected: "..fruitsCollected
                        Notify("Fruit Finder","Fruit Collected! Supreme.",2)
                    else
                        HopServer()
                    end
                end
            end
        end
    end
    wait(1)
end
