--// Services
local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Workspace = game:GetService("Workspace")
local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")
local HttpService = game:GetService("HttpService")
local TeleportService = game:GetService("TeleportService")
local Debris = game:GetService("Debris")
local Lighting = game:GetService("Lighting")
local LocalPlayer = Players.LocalPlayer
local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
local HumanoidRootPart = Character:WaitForChild("HumanoidRootPart")

--// Save System
local SaveFileName = "FruitFinderLaDev.json"
local Settings = {}
local function SaveSettings()
    writefile(SaveFileName, HttpService:JSONEncode(Settings))
end
local function ReadSettings()
    if not pcall(function() readfile(SaveFileName) end) then SaveSettings() end
    local ok, res = pcall(function() return HttpService:JSONDecode(readfile(SaveFileName)) end)
    if ok and type(res) == "table" then return res else SaveSettings() return {} end
end
Settings = ReadSettings()

--// Add Blur Effect for UI Depth
local blur = Instance.new("BlurEffect", Lighting)
blur.Size = 12

--// Fancier GUI Creation Function (with gradients, drop shadows)
local function MakeFrame(parent, size, pos, color, cornerRadius, transparency)
    local f = Instance.new("Frame", parent)
    f.Size = size
    f.Position = pos
    f.BackgroundColor3 = color
    f.BackgroundTransparency = transparency or 0
    local corner = Instance.new("UICorner", f)
    corner.CornerRadius = cornerRadius
    -- Gradient overlay
    local grad = Instance.new("UIGradient", f)
    grad.Color = ColorSequence.new{
        ColorSequenceKeypoint.new(0, Color3.fromRGB(90,0,170)), 
        ColorSequenceKeypoint.new(1, Color3.fromRGB(20,20,50))
    }
    grad.Rotation = 45
    -- Drop shadow
    local shadow = Instance.new("ImageLabel", f)
    shadow.AnchorPoint = Vector2.new(0.5,0.5)
    shadow.Position = UDim2.new(0.5,0,0.5,8)
    shadow.Size = UDim2.new(1.1,0,1.12,15)
    shadow.BackgroundTransparency = 1
    shadow.Image = "rbxassetid://6015897843"
    shadow.ImageTransparency = 0.6
    shadow.ZIndex = 0
    return f
end

--// Main GUI Construction
local ScreenGui = Instance.new("ScreenGui", LocalPlayer:WaitForChild("PlayerGui"))
ScreenGui.IgnoreGuiInset = true

local MainFrame = MakeFrame(ScreenGui, UDim2.new(0, 500, 0, 260), UDim2.new(0.5, -250, 0.7, 0),
    Color3.fromRGB(25,20,40), UDim.new(0,36), 0.05)
MainFrame.Active = true
MainFrame.Draggable = true

-- Fancy Animated Header (rainbow gradient, glow ribbon, animated text)
local Header = MakeFrame(MainFrame, UDim2.new(1,0,0,62), UDim2.new(0,0,0,0),
    Color3.fromRGB(80,0,170), UDim.new(0,36), 0.02)
local HeaderLabel = Instance.new("TextLabel", Header)
HeaderLabel.BackgroundTransparency = 1
HeaderLabel.Size = UDim2.new(1,0,1,0)
HeaderLabel.Font = Enum.Font.GothamBlack
HeaderLabel.TextColor3 = Color3.fromRGB(255,215,255)
HeaderLabel.TextScaled = true
HeaderLabel.Text = ""
HeaderLabel.TextStrokeTransparency = 0.8
HeaderLabel.TextStrokeColor3 = Color3.fromRGB(180,50,255)
HeaderLabel.ZIndex = 3

-- Animated Rainbow Typewriter Text
local bannerText = "‚ú® PREMIUM Script: Fruit Finder | Made by Young ‚ú®"
spawn(function()
    while true do
        for i = 1, #bannerText do
            HeaderLabel.Text = string.sub(bannerText, 1, i)
            local t = math.abs(math.sin(tick()*2 + i*0.09))
            HeaderLabel.TextColor3 = Color3.fromHSV(t,1,1)
            HeaderLabel.TextStrokeTransparency = 0.8-0.2*t
            RunService.RenderStepped:Wait()
        end
        wait(1)
        for i = #bannerText, 1, -2 do
            HeaderLabel.Text = string.sub(bannerText, 1, i)
            RunService.RenderStepped:Wait()
        end
        HeaderLabel.Text = ""
        wait(0.25)
    end
end)

-- Animate Header Glow Ribbon
local Ribbon = Instance.new("Frame", Header)
Ribbon.Size = UDim2.new(1,0,0,10)
Ribbon.Position = UDim2.new(0,0,1,-5)
Ribbon.BackgroundColor3 = Color3.fromRGB(255, 220, 80)
Ribbon.BackgroundTransparency = 0.7
local RibbonCorner = Instance.new("UICorner", Ribbon)
RibbonCorner.CornerRadius = UDim.new(0,6)
spawn(function()
    while true do
        local s = .5 + math.sin(tick()*2)*.15
        Ribbon.Size = UDim2.new(s,0,0,10)
        Ribbon.BackgroundTransparency = 0.6 + math.abs(math.cos(tick()*5))*0.15
        RunService.RenderStepped:Wait()
    end
end)

-- Status Box (animated glow, pop-in)
local StatusFrame = MakeFrame(MainFrame, UDim2.new(0.95,0,0.28,0), UDim2.new(0.025,0,0.265,0),
    Color3.fromRGB(45,35,70), UDim.new(0,22), 0.1)
local StatusLabel = Instance.new("TextLabel", StatusFrame)
StatusLabel.Size = UDim2.new(1,0,1,0)
StatusLabel.BackgroundTransparency = 1
StatusLabel.Font = Enum.Font.GothamBlack
StatusLabel.TextColor3 = Color3.fromRGB(210,255,210)
StatusLabel.TextScaled = true
StatusLabel.Text = "Status: Searching..."
StatusLabel.TextStrokeTransparency = 0.7
StatusLabel.TextStrokeColor3 = Color3.fromRGB(120,220,190)

-- Fruits Collected Box (pulsing effect)
local FruitFrame = MakeFrame(MainFrame, UDim2.new(0.95,0,0.13,0), UDim2.new(0.025,0,0.62,0),
    Color3.fromRGB(60,30,80), UDim.new(0,22), 0.06)
local FruitCountLabel = Instance.new("TextLabel", FruitFrame)
FruitCountLabel.Size = UDim2.new(1,0,1,0)
FruitCountLabel.BackgroundTransparency = 1
FruitCountLabel.Font = Enum.Font.GothamBold
FruitCountLabel.TextColor3 = Color3.fromRGB(0,255,128)
FruitCountLabel.TextStrokeTransparency = 0.5
FruitCountLabel.Text = "Fruits Collected: 0"
FruitCountLabel.TextScaled = true
spawn(function()
    while true do
        local pulse = 0.7 + math.abs(math.sin(tick()*3))*0.3
        FruitFrame.BackgroundTransparency = 0.05 + 0.09*pulse
        FruitCountLabel.TextColor3 = Color3.fromHSV(0.35 + math.sin(tick()) * 0.15, 1, 1)
        RunService.RenderStepped:Wait()
    end
end)

-- Animated Notification (slide in/out, glowing border)
local function Notify(title, text, duration)
    duration = duration or 4
    local notif = MakeFrame(ScreenGui, UDim2.new(0,410,0,70), UDim2.new(0.5,-205,0.13,-3),
        Color3.fromRGB(25,25,45), UDim.new(0,18), 0.01)
    notif.AnchorPoint = Vector2.new(0.5,0)
    notif.ZIndex = 40
    local titleLabel = Instance.new("TextLabel", notif)
    titleLabel.Size = UDim2.new(1,0,0.55,0)
    titleLabel.BackgroundTransparency = 1
    titleLabel.Font = Enum.Font.GothamBlack
    titleLabel.TextColor3 = Color3.fromRGB(255,215,80)
    titleLabel.TextStrokeTransparency = 0.5
    titleLabel.Text = title
    titleLabel.TextScaled = true
    local textLabel = Instance.new("TextLabel",notif)
    textLabel.Size = UDim2.new(1,0,0.45,0)
    textLabel.Position = UDim2.new(0,0,0.55,0)
    textLabel.BackgroundTransparency = 1
    textLabel.Font = Enum.Font.Gotham
    textLabel.TextColor3 = Color3.fromRGB(255,255,250)
    textLabel.TextStrokeTransparency = 0.7
    textLabel.Text = text
    textLabel.TextScaled = true
    local edge = Instance.new("UIStroke", notif)
    edge.Thickness = math.random(2,3)
    edge.Color = Color3.fromRGB(120,220,190)
    edge.Transparency = 0.2
    spawn(function()
        local tweenIn = TweenService:Create(notif,TweenInfo.new(0.39,Enum.EasingStyle.Quad,Enum.EasingDirection.Out),
            {Position=UDim2.new(0.5,-205,0.09,0)})
        tweenIn:Play()
        tweenIn.Completed:Wait()
        wait(duration)
        local tweenOut = TweenService:Create(notif,TweenInfo.new(0.34,Enum.EasingStyle.Quad,Enum.EasingDirection.In),
            {Position=UDim2.new(0.5,-205,0.09,-110)})
        tweenOut:Play()
        tweenOut.Completed:Wait()
        notif:Destroy()
    end)
end

-- Fancy Fruit ESP (glow, pulsing, floating, rainbow text)
local function AddESP(fruit)
    if not fruit.PrimaryPart then return end
    local bgui = Instance.new("BillboardGui",fruit)
    bgui.AlwaysOnTop = true
    bgui.Size = UDim2.new(0,180,0,55)
    bgui.StudsOffset = Vector3.new(0,3,0)
    local label = Instance.new("TextLabel",bgui)
    label.Size = UDim2.new(1,0,1,0)
    label.BackgroundTransparency = 1
    label.Text = "ü•ù " .. fruit.Name .. " ü•ù"
    label.Font = Enum.Font.GothamBlack
    label.TextColor3 = Color3.fromHSV(math.random(), 0.75, 1)
    label.TextStrokeTransparency = 0.5
    label.TextScaled = true
    local glow = Instance.new("UIStroke", label)
    glow.Color = Color3.fromRGB(255,0,128)
    glow.Thickness = 2.5
    spawn(function()
        local scale = 1
        local dir = 1
        while fruit and fruit.Parent and fruit.PrimaryPart do
            local t = tick()
            scale = 1 + math.sin(t*3)*0.25
            label.TextColor3 = Color3.fromHSV(math.abs(math.sin(t * 2)),0.97,1)
            label.TextStrokeTransparency = 0.32 + 0.2*math.sin(t*2)
            label.Position = UDim2.new(0,0,0.04 + 0.03*math.cos(t*1.4),0)
            label.TextSize = 18 + 5*math.abs(math.sin(t*3))
            glow.Color = Color3.fromHSV(math.abs(math.cos(t * 1.8)),1,1)
            RunService.RenderStepped:Wait()
        end
        bgui:Destroy()
    end)
end

-- Server hop (animated status)
local function ListServers(cursor)
    local url = "https://games.roblox.com/v1/games/" .. game.PlaceId .. "/servers/Public?sortOrder=Asc&limit=100"
    if cursor then url = url .. "&cursor=" .. cursor end
    local response = game:HttpGet(url)
    return HttpService:JSONDecode(response)
end
local function HopServer()
    for i=6,1,-1 do
        StatusLabel.Text = "Status: Server hop in "..i.."s"
        StatusFrame.BackgroundTransparency = 0.11 + 0.09*math.abs(math.sin(tick()*2+i))
        wait(1)
    end
    Notify("PREMIUM Script","Server Hopping Now!","3")
    local NextCursor,targetServer=nil,nil
    repeat
        local serversData = ListServers(NextCursor)
        NextCursor = serversData.nextPageCursor
        for _,srv in pairs(serversData.data) do
            if srv.playing < srv.maxPlayers and srv.id ~= game.JobId then
                targetServer = srv; break
            end
        end
    until targetServer
    TeleportService:TeleportToPlaceInstance(game.PlaceId, targetServer.id, LocalPlayer)
end

-- Main Loop
local fruitsCollected = 0
while true do
    local fruits = {}
    for _, m in pairs(Workspace:GetDescendants()) do
        if m:IsA("Model") and m.Name:find("Fruit") then
            table.insert(fruits, m)
            AddESP(m)
        end
    end
    if #fruits == 0 then
        StatusLabel.Text = "Status: No fruits, hopping server!"
        HopServer()
    else
        for _, fruit in pairs(fruits) do
            if fruit.PrimaryPart then
                StatusLabel.Text = "Status: Fruit Found! Moving..."
                local twn = TweenService:Create(
                    HumanoidRootPart,
                    TweenInfo.new(0.67, Enum.EasingStyle.Back, Enum.EasingDirection.Out),
                    {CFrame = CFrame.new(fruit.PrimaryPart.Position + Vector3.new(0,3,0))}
                )
                twn:Play()
                twn.Completed:Wait()
                local tool = LocalPlayer.Character:FindFirstChildOfClass("Tool") or LocalPlayer.Backpack:FindFirstChildOfClass("Tool")
                if tool and tool.Name:find("Fruit") then
                    local success, _ = pcall(function()
                        ReplicatedStorage.Remotes.CommF_:InvokeServer("StoreFruit", tool:GetAttribute("OriginalName"), tool)
                    end)
                    if success then
                        fruitsCollected = fruitsCollected + 1
                        FruitCountLabel.Text = "Fruits Collected: "..fruitsCollected
                        Notify("PREMIUM Script","Fruit Collected! Made by Young",3)
                    else
                        HopServer()
                    end
                end
            end
        end
    end
    wait(1)
end
