-- ct on top
local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Workspace = game:GetService("Workspace")
local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")
local HttpService = game:GetService("HttpService")

local LocalPlayer = Players.LocalPlayer
local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
local HumanoidRootPart = Character:WaitForChild("HumanoidRootPart")

-- Settings
local SaveFileName = "FruitFinderLaDev.json"
local Settings = {}
local function SaveSettings()
    writefile(SaveFileName, HttpService:JSONEncode(Settings))
end
local function ReadSettings()
    if not pcall(function() readfile(SaveFileName) end) then SaveSettings() end
    local success, result = pcall(function() return HttpService:JSONDecode(readfile(SaveFileName)) end)
    if success and type(result)=="table" then return result else SaveSettings() return {} end
end
Settings = ReadSettings()

-- GUI
local ScreenGui = Instance.new("ScreenGui", LocalPlayer:WaitForChild("PlayerGui"))

-- Draggable Rounded Main GUI
local MainFrame = Instance.new("Frame", ScreenGui)
MainFrame.Size = UDim2.new(0, 350, 0, 150)
MainFrame.Position = UDim2.new(0.5, -175, 0.75, 0)
MainFrame.BackgroundColor3 = Color3.fromRGB(30,30,30)
MainFrame.BackgroundTransparency = 0.1
MainFrame.BorderSizePixel = 0
MainFrame.ClipsDescendants = true
MainFrame.AnchorPoint = Vector2.new(0.5,0.5)
MainFrame.Active = true
MainFrame.Draggable = true
local UICorner = Instance.new("UICorner", MainFrame)
UICorner.CornerRadius = UDim.new(0,15)

-- Gradient Header
local Header = Instance.new("Frame", MainFrame)
Header.Size = UDim2.new(1,0,0,40)
Header.Position = UDim2.new(0,0,0,0)
Header.BackgroundColor3 = Color3.fromRGB(50,50,50)
local HeaderCorner = Instance.new("UICorner", Header)
HeaderCorner.CornerRadius = UDim.new(0,15)

local HeaderLabel = Instance.new("TextLabel", Header)
HeaderLabel.Size = UDim2.new(1,0,1,0)
HeaderLabel.BackgroundTransparency = 1
HeaderLabel.Text = ""
HeaderLabel.Font = Enum.Font.GothamBold
HeaderLabel.TextColor3 = Color3.fromRGB(255, 215, 0)
HeaderLabel.TextScaled = true

-- Typewriter rainbow animation
local bannerText = "✨ Premium Script: Fruit Finder | Made by Young ✨"
spawn(function()
    while true do
        HeaderLabel.Text = ""
        for i = 1, #bannerText do
            HeaderLabel.Text = string.sub(bannerText,1,i)
            local t = (math.sin(tick()*3)+1)/2
            HeaderLabel.TextColor3 = Color3.fromHSV(t,1,1)
            RunService.RenderStepped:Wait()
        end
        task.wait(2)
    end
end)

-- Status Labels
local StatusLabel = Instance.new("TextLabel", MainFrame)
StatusLabel.Size = UDim2.new(1,0,0.3,0)
StatusLabel.Position = UDim2.new(0,0,0.3,0)
StatusLabel.BackgroundTransparency = 1
StatusLabel.Font = Enum.Font.GothamBold
StatusLabel.TextColor3 = Color3.fromRGB(255,255,255)
StatusLabel.TextScaled = true
StatusLabel.Text = "Status: Searching..."

local FruitCountLabel = Instance.new("TextLabel", MainFrame)
FruitCountLabel.Size = UDim2.new(1,0,0.3,0)
FruitCountLabel.Position = UDim2.new(0,0,0.6,0)
FruitCountLabel.BackgroundTransparency = 1
FruitCountLabel.Font = Enum.Font.Gotham
FruitCountLabel.TextColor3 = Color3.fromRGB(0,255,128)
FruitCountLabel.TextScaled = true
FruitCountLabel.Text = "Fruits Collected: 0"

-- Premium Notifications
local function Notify(title,text,duration)
    duration = duration or 4
    local notif = Instance.new("Frame",ScreenGui)
    notif.Size = UDim2.new(0,300,0,60)
    notif.Position = UDim2.new(0.5,-150,0.1,0)
    notif.BackgroundColor3 = Color3.fromRGB(30,30,30)
    notif.BackgroundTransparency = 0.1
    notif.AnchorPoint = Vector2.new(0.5,0)
    notif.ClipsDescendants = true
    local corner = Instance.new("UICorner",notif)
    corner.CornerRadius = UDim.new(0,10)

    local titleLabel = Instance.new("TextLabel",notif)
    titleLabel.Size = UDim2.new(1,0,0.5,0)
    titleLabel.BackgroundTransparency = 1
    titleLabel.Text = title
    titleLabel.Font = Enum.Font.GothamBold
    titleLabel.TextColor3 = Color3.fromRGB(255,215,0)
    titleLabel.TextScaled = true

    local textLabel = Instance.new("TextLabel",notif)
    textLabel.Size = UDim2.new(1,0,0.5,0)
    textLabel.Position = UDim2.new(0,0,0.5,0)
    textLabel.BackgroundTransparency = 1
    textLabel.Text = text
    textLabel.Font = Enum.Font.Gotham
    textLabel.TextColor3 = Color3.fromRGB(255,255,255)
    textLabel.TextScaled = true

    spawn(function()
        local tween = TweenService:Create(notif,TweenInfo.new(0.5,Enum.EasingStyle.Quad,Enum.EasingDirection.Out),{Position=UDim2.new(0.5,-150,0.1,50)})
        tween:Play()
        tween.Completed:Wait()
        task.wait(duration)
        notif:Destroy()
    end)
end

-- Premium Fruit ESP
local function AddESP(fruit)
    if not fruit.PrimaryPart then return end
    local bgui = Instance.new("BillboardGui",fruit)
    bgui.AlwaysOnTop = true
    bgui.Size = UDim2.new(0,150,0,50)
    bgui.StudsOffset = Vector3.new(0,3,0)
    local label = Instance.new("TextLabel",bgui)
    label.Size=UDim2.new(1,0,1,0)
    label.BackgroundTransparency=1
    label.Text = fruit.Name
    label.TextColor3 = Color3.fromRGB(255,0,0)
    label.TextScaled=true
    label.Font = Enum.Font.GothamBold

    -- Pulsing Circle
    local circle = Instance.new("BillboardGui",fruit)
    circle.AlwaysOnTop=true
    circle.Size=UDim2.new(0,50,0,50)
    circle.StudsOffset=Vector3.new(0,2,0)
    local frame=Instance.new("Frame",circle)
    frame.Size=UDim2.new(1,0,1,0)
    frame.BackgroundColor3=Color3.fromRGB(255,215,0)
    frame.BackgroundTransparency=0.6
    frame.BorderSizePixel=0
    frame.AnchorPoint=Vector2.new(0.5,0.5)
    frame.Position=UDim2.new(0.5,0,0.5,0)

    -- Down Arrow
    local arrow = Instance.new("BillboardGui",fruit)
    arrow.AlwaysOnTop=true
    arrow.Size=UDim2.new(0,30,0,30)
    arrow.StudsOffset=Vector3.new(0,5,0)
    local arrowLabel = Instance.new("TextLabel",arrow)
    arrowLabel.Size=UDim2.new(1,0,1,0)
    arrowLabel.BackgroundTransparency=1
    arrowLabel.Text="⬇"
    arrowLabel.TextColor3=Color3.fromRGB(255,50,50)
    arrowLabel.TextScaled=true
    arrowLabel.Font=Enum.Font.GothamBold

    spawn(function()
        local scale = 1
        local direction = 1
        while fruit.PrimaryPart do
            local t = (math.sin(tick()*3)+1)/2
            label.TextColor3=Color3.fromHSV(t,1,1)
            arrowLabel.TextColor3=Color3.fromHSV(1-t,1,1)
            scale = scale + 0.02*direction
            if scale>1.3 then direction=-1 end
            if scale<0.8 then direction=1 end
            frame.Size = UDim2.new(0,50*scale,0,50*scale)
            RunService.RenderStepped:Wait()
        end
        bgui:Destroy(); circle:Destroy(); arrow:Destroy()
    end)
end

-- Server Hop Function
local function HopServer()
    Notify("Premium Script","Server Hopping...",3)
    local visitedServers={}
    local function Hop()
        local page=1
        while true do
            local serverlist=ReplicatedStorage.__ServerBrowser:InvokeServer(page)
            if not serverlist or next(serverlist)==nil then break end
            for jobId,info in pairs(serverlist) do
                if jobId~=game.JobId and info.Count<11 then
                    local lastVisit=(Settings[jobId] and Settings[jobId].Time) or 0
                    if tick()-lastVisit>60*60 and not visitedServers[jobId] then
                        visitedServers[jobId]=true
                        Settings[jobId]={Time=tick()}
                        SaveSettings()
                        ReplicatedStorage.__ServerBrowser:InvokeServer("teleport",jobId)
                        return true
                    end
                end
            end
            page=page+1
        end
        return false
    end
    while not Hop() do task.wait(1) end
end

-- Main Loop
local fruitsCollected=0
while true do
    local fruits={}
    for _,model in pairs(Workspace:GetDescendants()) do
        if model:IsA("Model") and model.Name:find("Fruit") then
            table.insert(fruits,model)
            AddESP(model)
        end
    end

    if #fruits==0 then
        StatusLabel.Text="Status: No Fruits, Server Hop"
        HopServer()
    else
        for _,fruit in pairs(fruits) do
            if fruit.PrimaryPart then
                StatusLabel.Text="Status: Fruit Found! Moving..."
                HumanoidRootPart.CFrame = CFrame.new(fruit.PrimaryPart.Position + Vector3.new(0,3,0))
                -- Collect
                local tool = LocalPlayer.Character:FindFirstChildOfClass("Tool") or LocalPlayer.Backpack:FindFirstChildOfClass("Tool")
                if tool and tool.Name:find("Fruit") then
                    local success,_ = pcall(function()
                        ReplicatedStorage.Remotes.CommF_:InvokeServer("StoreFruit", tool:GetAttribute("OriginalName"), tool)
                    end)
                    if success then
                        fruitsCollected=fruitsCollected+1
                        FruitCountLabel.Text="Fruits Collected: "..fruitsCollected
                        Notify("Premium Script","Fruit Collected! Made by Young",3)
                    else
                        Notify("Premium Script","Cannot Store Fruit! Server Hop",3)
                        HopServer()
                    end
                end
            end
        end
    end
    task.wait(1)
end
