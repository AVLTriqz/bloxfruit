-- Servicess
local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Workspace = game:GetService("Workspace")
local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")
local HttpService = game:GetService("HttpService")
local TeleportService = game:GetService("TeleportService")
local Debris = game:GetService("Debris")

local LocalPlayer = Players.LocalPlayer
local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
local HumanoidRootPart = Character:WaitForChild("HumanoidRootPart")

-- Settings
local SaveFileName = "FruitFinderLaDev.json"
local Settings = {}
local function SaveSettings()
    writefile(SaveFileName, HttpService:JSONEncode(Settings))
end
local function ReadSettings()
    if not pcall(function() readfile(SaveFileName) end) then SaveSettings() end
    local success, result = pcall(function() return HttpService:JSONDecode(readfile(SaveFileName)) end)
    if success and type(result)=="table" then return result else SaveSettings() return {} end
end
Settings = ReadSettings()

-- Fancy GUI
local ScreenGui = Instance.new("ScreenGui", LocalPlayer:WaitForChild("PlayerGui"))

local MainFrame = Instance.new("Frame", ScreenGui)
MainFrame.Size = UDim2.new(0, 480, 0, 250)
MainFrame.Position = UDim2.new(0.5, -240, 0.7, 0)
MainFrame.BackgroundColor3 = Color3.fromRGB(20, 20, 30)
MainFrame.ClipsDescendants = true
MainFrame.Active = true
MainFrame.Draggable = true
local UICorner = Instance.new("UICorner", MainFrame)
UICorner.CornerRadius = UDim.new(0,30)

-- Header
local Header = Instance.new("Frame", MainFrame)
Header.Size = UDim2.new(1,0,0,60)
Header.BackgroundColor3 = Color3.fromRGB(60,0,100)
local HeaderCorner = Instance.new("UICorner", Header)
HeaderCorner.CornerRadius = UDim.new(0,30)

local HeaderLabel = Instance.new("TextLabel", Header)
HeaderLabel.Size = UDim2.new(1,0,1,0)
HeaderLabel.BackgroundTransparency = 1
HeaderLabel.Font = Enum.Font.GothamBold
HeaderLabel.TextColor3 = Color3.fromRGB(255,215,0)
HeaderLabel.TextScaled = true
HeaderLabel.Text = ""

-- Typewriter rainbow header
local bannerText = "✨ Premium Script: Fruit Finder | Made by Young ✨"
spawn(function()
    while true do
        HeaderLabel.Text = ""
        for i = 1, #bannerText do
            HeaderLabel.Text = string.sub(bannerText,1,i)
            local t = (math.sin(tick()*3)+1)/2
            HeaderLabel.TextColor3 = Color3.fromHSV(t,1,1)
            RunService.RenderStepped:Wait()
        end
        task.wait(2)
    end
end)

-- Status Box
local StatusFrame = Instance.new("Frame", MainFrame)
StatusFrame.Size = UDim2.new(0.95,0,0.3,0)
StatusFrame.Position = UDim2.new(0.025,0,0.25,0)
StatusFrame.BackgroundColor3 = Color3.fromRGB(35,35,55)
local StatusCorner = Instance.new("UICorner", StatusFrame)
StatusCorner.CornerRadius = UDim.new(0,20)

local StatusLabel = Instance.new("TextLabel", StatusFrame)
StatusLabel.Size = UDim2.new(1,0,1,0)
StatusLabel.BackgroundTransparency = 1
StatusLabel.Font = Enum.Font.GothamBold
StatusLabel.TextColor3 = Color3.fromRGB(255,255,255)
StatusLabel.TextScaled = true
StatusLabel.Text = "Status: Searching..."

-- Fruits Collected Box
local FruitFrame = Instance.new("Frame", MainFrame)
FruitFrame.Size = UDim2.new(0.95,0,0.15,0)
FruitFrame.Position = UDim2.new(0.025,0,0.6,0)
FruitFrame.BackgroundColor3 = Color3.fromRGB(45,45,70)
local FruitCorner = Instance.new("UICorner", FruitFrame)
FruitCorner.CornerRadius = UDim.new(0,20)

local FruitCountLabel = Instance.new("TextLabel", FruitFrame)
FruitCountLabel.Size = UDim2.new(1,0,1,0)
FruitCountLabel.BackgroundTransparency = 1
FruitCountLabel.Font = Enum.Font.Gotham
FruitCountLabel.TextColor3 = Color3.fromRGB(0,255,128)
FruitCountLabel.TextScaled = true
FruitCountLabel.Text = "Fruits Collected: 0"

-- Premium Notification
local function Notify(title,text,duration)
    duration = duration or 4
    local notif = Instance.new("Frame",ScreenGui)
    notif.Size = UDim2.new(0,400,0,60)
    notif.Position = UDim2.new(0.5,-200,0.1,0)
    notif.BackgroundColor3 = Color3.fromRGB(20,20,30)
    notif.AnchorPoint = Vector2.new(0.5,0)
    local corner = Instance.new("UICorner",notif)
    corner.CornerRadius = UDim.new(0,15)

    local titleLabel = Instance.new("TextLabel",notif)
    titleLabel.Size = UDim2.new(1,0,0.5,0)
    titleLabel.BackgroundTransparency = 1
    titleLabel.Text = title
    titleLabel.Font = Enum.Font.GothamBold
    titleLabel.TextColor3 = Color3.fromRGB(255,215,0)
    titleLabel.TextScaled = true

    local textLabel = Instance.new("TextLabel",notif)
    textLabel.Size = UDim2.new(1,0,0.5,0)
    textLabel.Position = UDim2.new(0,0,0.5,0)
    textLabel.BackgroundTransparency = 1
    textLabel.Text = text
    textLabel.Font = Enum.Font.Gotham
    textLabel.TextColor3 = Color3.fromRGB(255,255,255)
    textLabel.TextScaled = true

    spawn(function()
        local tweenIn = TweenService:Create(notif,TweenInfo.new(0.5,Enum.EasingStyle.Quad,Enum.EasingDirection.Out),{Position=UDim2.new(0.5,-200,0.1,50)})
        tweenIn:Play()
        tweenIn.Completed:Wait()
        task.wait(duration)
        notif:Destroy()
    end)
end

-- Fruit ESP with pulsing
local function AddESP(fruit)
    if not fruit.PrimaryPart then return end
    local bgui = Instance.new("BillboardGui",fruit)
    bgui.AlwaysOnTop = true
    bgui.Size = UDim2.new(0,150,0,50)
    bgui.StudsOffset = Vector3.new(0,3,0)
    local label = Instance.new("TextLabel",bgui)
    label.Size=UDim2.new(1,0,1,0)
    label.BackgroundTransparency=1
    label.Text = fruit.Name
    label.TextColor3 = Color3.fromRGB(255,0,0)
    label.TextScaled=true
    label.Font = Enum.Font.GothamBold

    spawn(function()
        local scale = 1
        local dir = 1
        while fruit.PrimaryPart do
            scale = scale + 0.03*dir
            if scale>1.3 then dir=-1 end
            if scale<0.8 then dir=1 end
            label.TextSize = 18*scale
            RunService.RenderStepped:Wait()
        end
        bgui:Destroy()
    end)
end

-- Server hop using Roblox API
local function ListServers(cursor)
    local url = "https://games.roblox.com/v1/games/" .. game.PlaceId .. "/servers/Public?sortOrder=Asc&limit=100"
    if cursor then url = url .. "&cursor=" .. cursor end
    local response = game:HttpGet(url)
    return HttpService:JSONDecode(response)
end

local function HopServer()
    -- 5-second countdown
    for i=5,1,-1 do
        StatusLabel.Text="Status: Server hop in "..i.."s"
        task.wait(1)
    end
    Notify("Premium Script","Server Hopping Now!","3")

    local NextCursor = nil
    local targetServer = nil
    repeat
        local serversData = ListServers(NextCursor)
        NextCursor = serversData.nextPageCursor
        for _, srv in pairs(serversData.data) do
            if srv.playing < srv.maxPlayers and srv.id ~= game.JobId then
                targetServer = srv
                break
            end
        end
    until targetServer

    TeleportService:TeleportToPlaceInstance(game.PlaceId, targetServer.id, LocalPlayer)
end

-- Main Loop
local fruitsCollected = 0
while true do
    local fruits = {}
    for _, model in pairs(Workspace:GetDescendants()) do
        if model:IsA("Model") and model.Name:find("Fruit") then
            table.insert(fruits,model)
            AddESP(model)
        end
    end

    if #fruits==0 then
        HopServer()
    else
        for _, fruit in pairs(fruits) do
            if fruit.PrimaryPart then
                StatusLabel.Text="Status: Fruit Found! Moving..."
                HumanoidRootPart.CFrame = CFrame.new(fruit.PrimaryPart.Position + Vector3.new(0,3,0))
                local tool = LocalPlayer.Character:FindFirstChildOfClass("Tool") or LocalPlayer.Backpack:FindFirstChildOfClass("Tool")
                if tool and tool.Name:find("Fruit") then
                    local success,_ = pcall(function()
                        ReplicatedStorage.Remotes.CommF_:InvokeServer("StoreFruit", tool:GetAttribute("OriginalName"), tool)
                    end)
                    if success then
                        fruitsCollected = fruitsCollected + 1
                        FruitCountLabel.Text="Fruits Collected: "..fruitsCollected
                        Notify("Premium Script","Fruit Collected! Made by Young",3)
                    else
                        HopServer()
                    end
                end
            end
        end
    end
    task.wait(1)
end
